package com.hp.bsc.testing.jmssender.auth;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.8.redhat-7
 * 2016-08-09T15:58:08.605+02:00
 * Generated source version: 2.6.8.redhat-7
 * 
 */
@WebService(targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", name = "Authentication")
@XmlSeeAlso({ObjectFactory.class})
public interface Authentication {

    @WebMethod
    @Action(input = "http://ch/hpbsc/zss/authentication/v3/Authentication/changePasswordRequest", output = "http://ch/hpbsc/zss/authentication/v3/Authentication/changePasswordResponse", fault = {@FaultAction(className = InvalidPasswordException.class, value = "http://ch/hpbsc/zss/authentication/v3/Authentication/changePassword/Fault/InvalidPasswordException"), @FaultAction(className = UserNotAuthenticatedException.class, value = "http://ch/hpbsc/zss/authentication/v3/Authentication/changePassword/Fault/UserNotAuthenticatedException")})
    @RequestWrapper(localName = "changePassword", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.ChangePassword")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.ChangePasswordResponse")
    public void changePassword(
        @WebParam(name = "securityObject", targetNamespace = "")
        com.hp.bsc.testing.jmssender.auth.SecurityObject securityObject,
        @WebParam(name = "oldPassword", targetNamespace = "")
        byte[] oldPassword,
        @WebParam(name = "newPassword", targetNamespace = "")
        byte[] newPassword
    ) throws InvalidPasswordException, UserNotAuthenticatedException;

    @WebMethod
    @Action(input = "http://ch/hpbsc/zss/authentication/v3/Authentication/verifyCredentialRequest", output = "http://ch/hpbsc/zss/authentication/v3/Authentication/verifyCredentialResponse")
    @RequestWrapper(localName = "verifyCredential", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.VerifyCredential")
    @ResponseWrapper(localName = "verifyCredentialResponse", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.VerifyCredentialResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean verifyCredential(
        @WebParam(name = "securityObject", targetNamespace = "")
        com.hp.bsc.testing.jmssender.auth.SecurityObject securityObject
    );

    @WebMethod
    @Action(input = "http://ch/hpbsc/zss/authentication/v3/Authentication/loginRequest", output = "http://ch/hpbsc/zss/authentication/v3/Authentication/loginResponse", fault = {@FaultAction(className = UserNotAuthenticatedException.class, value = "http://ch/hpbsc/zss/authentication/v3/Authentication/login/Fault/UserNotAuthenticatedException")})
    @RequestWrapper(localName = "login", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ch/hpbsc/zss/authentication/v3/", className = "com.hp.bsc.testing.jmssender.auth.LoginResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.hp.bsc.testing.jmssender.auth.SecurityObject login(
        @WebParam(name = "userName", targetNamespace = "")
        java.lang.String userName,
        @WebParam(name = "machineName", targetNamespace = "")
        java.lang.String machineName,
        @WebParam(name = "mandant", targetNamespace = "")
        int mandant,
        @WebParam(name = "password", targetNamespace = "")
        byte[] password
    ) throws UserNotAuthenticatedException;
}
